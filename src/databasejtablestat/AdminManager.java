/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package databasejtablestat;

import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableModel;
import net.proteanit.sql.DbUtils;

/**
 *
 * @author Arm_AVI
 */

public class AdminManager extends javax.swing.JFrame {

    public Connection con = null;
    public PreparedStatement stmt = null;
    public ResultSet rs = null;
    DefaultTableModel dm;

    public void mySqlconnection() {
        try {
            Class.forName("com.mysql.jdbc.Driver");
            con = DriverManager.getConnection(
                    "jdbc:mysql://localhost/admin", "root", "");
        } catch (Exception e) {
        }
    }
    
    public void fetch() {
        try {

            //Class.forName("com.mysql.jdbc.Driver");  
            //con = DriverManager.getConnection(  
            //"jdbc:mysql://localhost:3306/users","root","");
            //PreparedStatement stmt;
            mySqlconnection();
            String sqlSelec = "SELECT `id`, `username`,`password` FROM `admin`";
            stmt = con.prepareStatement(sqlSelec);
            rs = stmt.executeQuery();
            //Statement stmt = (PreparedStatement) con.createStatement();  
            //ResultSet rs = stmt.executeQuery("select * from users"); 

            TableModel model = DbUtils.resultSetToTableModel(rs);
            tblLoad.setModel(model);
        } catch (Exception e) {
            System.out.println("connection error");
        }
    }
    
    
    
    public AdminManager() {
        initComponents();
        //checkPan.setVisible(true);
         fetch();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        adminId = new javax.swing.JTextField();
        adminUn = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        passUn = new javax.swing.JPasswordField();
        hitCheck = new javax.swing.JButton();
        addAdmin = new javax.swing.JButton();
        updateAdmin = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblLoad = new javax.swing.JTable();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        jMenuItem1 = new javax.swing.JMenuItem();
        jMenuItem2 = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setResizable(false);

        jLabel3.setIcon(new javax.swing.ImageIcon("F:\\Android Projects\\Images For Applicaion\\developer_edi.png")); // NOI18N

        jLabel4.setText("ID:");

        adminUn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                adminUnActionPerformed(evt);
            }
        });

        jLabel1.setText("User Name: ");

        jLabel2.setText("Password:");

        passUn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                passUnActionPerformed(evt);
            }
        });

        hitCheck.setText("Change Admin Info");
        hitCheck.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                hitCheckActionPerformed(evt);
            }
        });

        addAdmin.setText("Add Admin");
        addAdmin.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addAdminActionPerformed(evt);
            }
        });

        updateAdmin.setText("Delete Admin");
        updateAdmin.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                updateAdminActionPerformed(evt);
            }
        });

        tblLoad.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        tblLoad.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblLoadMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tblLoad);

        jMenu1.setText("File");

        jMenuItem1.setText("Clear");
        jMenuItem1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem1ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem1);

        jMenuItem2.setText("Exit");
        jMenuItem2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem2ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem2);

        jMenuBar1.add(jMenu1);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel3)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jLabel1)
                                    .addComponent(jLabel4)
                                    .addComponent(jLabel2))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(passUn)
                                    .addComponent(adminId)
                                    .addComponent(adminUn, javax.swing.GroupLayout.PREFERRED_SIZE, 192, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addComponent(addAdmin, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(hitCheck, javax.swing.GroupLayout.DEFAULT_SIZE, 126, Short.MAX_VALUE)
                                    .addComponent(updateAdmin, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                        .addGap(0, 18, Short.MAX_VALUE))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(addAdmin)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(hitCheck)
                        .addGap(12, 12, 12)
                        .addComponent(updateAdmin))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(adminId, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel4))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(adminUn, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel1))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(passUn, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel2))))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 154, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(52, Short.MAX_VALUE))
        );

        setSize(new java.awt.Dimension(471, 500));
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void jMenuItem1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jMenuItem1ActionPerformed

    private void jMenuItem2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem2ActionPerformed
      System.exit(0);
    }//GEN-LAST:event_jMenuItem2ActionPerformed

    private void adminUnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_adminUnActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_adminUnActionPerformed

    private void addAdminActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addAdminActionPerformed
       
        int idAdminGet = Integer.parseInt(adminId.getText());
        String  unGet= adminUn.getText();
        String passGet = passUn.getText();
       
        
      // DefaultTableModel model = (DefaultTableModel) tblLoad.getModel();
      // model.addRow(new Object[]{idIn.getText(), nameIn.getText(),ageIn.getText()});
         
        
        try {
            mySqlconnection();
            String query = String.format("select * from admin where id = %d", idAdminGet);
            rs = stmt.executeQuery(query);
            if (rs.next()) {
                JOptionPane.showMessageDialog(null, "This Record is Already Exists!");
            } else {
                String sqlInsert = "insert into admin (id,username,password)" + " values (?, ?, ?)";
                stmt = con.prepareStatement(sqlInsert);
                stmt.setInt(1, idAdminGet);
                stmt.setString(2, unGet);
                stmt.setString(3, passGet);
               
                stmt.execute();
                rs = stmt.executeQuery();
            }

        } catch (Exception e) {
            System.out.println();
                    }

        
        fetch();
      
    }//GEN-LAST:event_addAdminActionPerformed

    private void passUnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_passUnActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_passUnActionPerformed

    private void tblLoadMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblLoadMouseClicked
         int selRow = tblLoad.getSelectedRow();
        TableModel model = tblLoad.getModel();
        //String TableClick = (tblLoad.getModel().getValueAt(selRow, 0).toString());
        adminId.setText(model.getValueAt(selRow, 0).toString());
        adminUn.setText(model.getValueAt(selRow, 1).toString());
        passUn.setText(model.getValueAt(selRow, 2).toString());
        
        
    }//GEN-LAST:event_tblLoadMouseClicked

    private void updateAdminActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_updateAdminActionPerformed

         try {
            String deleteDb = "DELETE FROM admin WHERE id =" + adminId.getText();
            stmt = con.prepareStatement(deleteDb);
            stmt.execute();
        } catch (Exception e) {
            System.out.println(e);
        }
        fetch();
        
        /*
        int idAdmin = Integer.parseInt(adminId.getText());
        String nameAdminGet = adminUn.getText();
        String passGet = passUn.getText();
    
  
       try {
            
           if(adminId.getText().equals("")||adminUn.getText().equals("")||passUn.getText().equals("")){
              JOptionPane.showMessageDialog(null,"Some Field is Empty!");
           }
           else{
             String update = "UPDATE admin SET id='" + idAdmin + "',username='" + nameAdminGet + "',password='" + passGet + "' WHERE id ='" + idAdmin + "'";
            stmt = con.prepareStatement(update);
            stmt.executeUpdate();
            //stmt.executeQuery();
           }
         
            //mySqlconnection();
          

        } catch (Exception e) {
            System.out.println(e);

        }
       
        
       /*
        try {
            int dialogLogic = JOptionPane.showConfirmDialog(null, "Are You Sure To Delete Admin!");
            
            if(dialogLogic == JOptionPane.YES_OPTION){
            String deleteAdmin = "DELETE FROM admin WHERE id="+adminId.getText();
            stmt = con.prepareStatement(deleteAdmin);
            stmt.execute();
            }
            else if(dialogLogic == JOptionPane.NO_OPTION){
              JOptionPane.showMessageDialog(null, "Ok As Your Wish!");
            }
        } catch (Exception e) {
            System.out.println("Worked");
        }
      */ 
       
       
       //checkPan.setVisible(true);
       //fetch();
       adminId.setText("");
       adminUn.setText("");
       passUn.setText("");
       //passCheck.setText("");
       
    }//GEN-LAST:event_updateAdminActionPerformed

    private void hitCheckActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_hitCheckActionPerformed
        
        int idAdmin = Integer.parseInt(adminId.getText());
        String nameAdminGet = adminUn.getText();
        String passGet = passUn.getText();
        
        String update = "UPDATE admin SET id='" + idAdmin + "',username='" + nameAdminGet + "',password='" + passGet + "' WHERE id ='" + idAdmin + "'";
        try {
            stmt = con.prepareStatement(update);
        } catch (SQLException ex) {
            Logger.getLogger(AdminManager.class.getName()).log(Level.SEVERE, null, ex);
        }
        try {
            stmt.executeUpdate();
        } catch (SQLException ex) {
            Logger.getLogger(AdminManager.class.getName()).log(Level.SEVERE, null, ex);
        }
        
        fetch();
    }//GEN-LAST:event_hitCheckActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(AdminManager.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(AdminManager.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(AdminManager.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(AdminManager.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new AdminManager().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton addAdmin;
    private javax.swing.JTextField adminId;
    private javax.swing.JTextField adminUn;
    private javax.swing.JButton hitCheck;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenuItem jMenuItem1;
    private javax.swing.JMenuItem jMenuItem2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JPasswordField passUn;
    private javax.swing.JTable tblLoad;
    private javax.swing.JButton updateAdmin;
    // End of variables declaration//GEN-END:variables
}
